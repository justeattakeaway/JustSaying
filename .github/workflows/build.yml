name: build

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main, dotnet-vnext]
  workflow_dispatch:

permissions:
  contents: read
  packages: read

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  NUGET_XMLDOC_MODE: skip
  TERM: xterm

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    outputs:
      dotnet-sdk-version: ${{ steps.setup-dotnet.outputs.dotnet-version }}

    permissions:
      attestations: write
      contents: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            os-name: macos
          - os: ubuntu-latest
            os-name: linux
          - os: windows-latest
            os-name: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # v4.3.0
        id: setup-dotnet

      - name: Setup NuGet cache
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # v4.2.2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/*.props') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Build, Test and Package
        if: ${{ runner.os != 'linux' }}
        shell: pwsh
        run: ./build.ps1

      - name: Build, Test, IntegrationTest and Package
        if: ${{ runner.os == 'linux' }}
        shell: pwsh
        run: ./build.ps1 -EnableIntegrationTests

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          flags: ${{ matrix.os-name }}

      - name: Generate SBOM
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          artifact-name: build-${{ matrix.os-name }}.spdx.json
          output-file: ./artifacts/build.spdx.json
          path: ./artifacts/bin
          upload-release-assets: ${{ runner.os == 'Windows' }}

      - name: Attest artifacts
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        if: |
          runner.os == 'Windows' &&
          github.event.repository.fork == false &&
          (github.ref_name == github.event.repository.default_branch ||
           startsWith(github.ref, 'refs/tags/v'))
        with:
          subject-path: |
            ./artifacts/bin/JustSaying/release*/JustSaying.dll
            ./artifacts/bin/JustSaying.Extensions.Aws/release*/JustSaying.Extensions.Aws.dll
            ./artifacts/bin/JustSaying.Extensions.DependencyInjection.Microsoft/release*/JustSaying.Extensions.DependencyInjection.Microsoft.dll
            ./artifacts/bin/JustSaying.Extensions.DependencyInjection.StructureMap/release*/JustSaying.Extensions.DependencyInjection.StructureMap.dll
            ./artifacts/bin/JustSaying.Models/release*/JustSaying.Models.dll
            ./artifacts/package/release/*

      - name: Publish NuGet packages
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: packages-${{ matrix.os-name }}
          path: ./artifacts/package/release
          if-no-files-found: error

  validate-packages:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Download packages
      uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      with:
        name: packages-windows

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # v4.3.0
      with:
        dotnet-version: ${{ needs.build.outputs.dotnet-sdk-version }}

    - name: Validate NuGet packages
      shell: pwsh
      run: |
        dotnet tool install --global dotnet-validate --version 0.0.1-preview.304 --allow-roll-forward
        $packages = Get-ChildItem -Filter "*.nupkg" | ForEach-Object { $_.FullName }
        $invalidPackages = 0
        foreach ($package in $packages) {
          dotnet validate package local $package
          if ($LASTEXITCODE -ne 0) {
            $invalidPackages++
          }
        }
        if ($invalidPackages -gt 0) {
          Write-Output "::error::$invalidPackages NuGet package(s) failed validation."
          exit 1
        }

  publish-github:
    needs: [ build, validate-packages ]
    permissions:
      packages: write
    runs-on: ubuntu-latest
    if: |
      github.event.repository.fork == false &&
      (github.ref_name == github.event.repository.default_branch ||
       startsWith(github.ref, 'refs/tags/v'))
    steps:

    - name: Download packages
      uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      with:
        name: packages-windows

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # v4.3.0
      with:
        dotnet-version: ${{ needs.build.outputs.dotnet-sdk-version }}

    - name: Publish NuGet packages to GitHub Packages
      run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate --no-symbols --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

  publish-nuget:
    needs: [ build, validate-packages ]
    runs-on: ubuntu-latest
    if: |
      github.event.repository.fork == false &&
      startsWith(github.ref, 'refs/tags/v')
    steps:

    - name: Download packages
      uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
      with:
        name: packages-windows

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@3951f0dfe7a07e2313ec93c75700083e2005cbab # v4.3.0
      with:
        dotnet-version: ${{ needs.build.outputs.dotnet-sdk-version }}

    - name: Push NuGet packages to NuGet.org
      run: dotnet nuget push "*.nupkg" --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate --source https://api.nuget.org/v3/index.json
