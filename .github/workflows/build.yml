name: build

on:
  push:
    branches: [main]
    tags: [v*]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_SYSTEM_CONSOLE_ALLOW_ANSI_COLOR_REDIRECTION: 1
  NUGET_XMLDOC_MODE: skip
  TERM: xterm

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            os_name: macos
          - os: ubuntu-latest
            os_name: linux
          - os: windows-latest
            os_name: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3

      - name: Build, Test and Package
        if: ${{ runner.os != 'linux' }}
        shell: pwsh
        run: ./build.ps1

      - name: Build, Test, IntegrationTest and Package
        if: ${{ runner.os == 'linux' }}
        shell: pwsh
        run: ./build.ps1 -EnableIntegrationTests

      - uses: codecov/codecov-action@v3
        name: Upload coverage to Codecov
        with:
          file: ./artifacts/coverage.cobertura.xml
          flags: ${{ matrix.os_name }}

      - name: Publish NuGet packages
        uses: actions/upload-artifact@v3
        with:
          name: packages-${{ matrix.os_name }}
          path: ./artifacts/packages

      - name: Publish pre-release NuGet packages to GitHub Packages
        run: dotnet nuget push "artifacts\packages\*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate --no-symbols --source https://nuget.pkg.github.com/justeattakeaway/index.json
        if: ${{ github.event.repository.fork == false && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && runner.os == 'Windows' }}

      - name: Push NuGet packages to NuGet.org
        run: dotnet nuget push "artifacts\packages\*.nupkg" --api-key ${{ secrets.NUGET_TOKEN }} --skip-duplicate --source https://api.nuget.org/v3/index.json
        if: ${{ github.event.repository.fork == false && startsWith(github.ref, 'refs/tags/v') && runner.os == 'Windows' }}
